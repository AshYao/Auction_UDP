import java.io.*;
import java.net.*;
import java.util.ArrayList;
import java.util.List;

public class Client {
	private static List<Reciver> fool = new ArrayList<Reciver>();

	public static DatagramSocket socket;
	public static boolean mainFlag, reciverFlag;
	public static int bidderID;
	public static int masterID;
	public static String bidderName;
	public static int auctionNo;
	public static String[] command;

	public static boolean isNumeric(String str) {
		for (int i = str.length(); --i >= 0;) {
			if (!Character.isDigit(str.charAt(i)))
				return false;
		}
		return true;
	}
	
	public static int getOrdernum(String str) {
		for (int i = 0; i<=14; i++ ) {
			if(str.equals(command[i]))
				return i;
		}
		return 20;
	}
		
	public static void main(String[] args) throws IOException {
		InetAddress address = InetAddress.getByName("localhost");
		InetAddress myaddress = address;
		socket = new DatagramSocket();
		int port = 2333;
		int myport = socket.getLocalPort();

		String info;
		byte[] data2;
		DatagramPacket packet2;

		mainFlag = true;
		reciverFlag = true;
		bidderID = -1;
		masterID = -1;
		auctionNo = -1;

		command = new String[20];
		command[0] = "register";
		command[1] = "login";
		command[2] = "auctions";
		command[3] = "join";
		command[4] = "list";
		command[5] = "bid";
		command[6] = "leave";
		command[7] = "master";
		command[8] = "msg";
		command[9] = "enter";
		command[10] = "kickout";
		command[11] = "open";
		command[12] = "close";
		command[13] = "quit";
		command[14] = "error";
		
		new Client().startReciver();

		// 登陆
		BufferedReader strin = new BufferedReader(new InputStreamReader(System.in));
		System.out.println("****客户端已经启动*****");
		System.out.println("请登录或注册");
		while (true) {
			info = strin.readLine();
			String[] logstr = new String[] {};
			logstr = info.split(" ");
			int ordernum = getOrdernum(logstr[0]);
			if (ordernum==0 || ordernum==1 || ordernum == 7) {
				if (logstr.length == 3) {
					info=ordernum + " " + logstr[1] + " " +logstr[2];
					data2 = info.getBytes();
					packet2 = new DatagramPacket(data2, data2.length, address, port);
					socket.send(packet2);
					try {
						Thread.sleep(1000);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
					if (bidderID != -1 || masterID != -1)
						break;
				} else
					System.out.println("指令有误，请重新检查");
			} else
				System.out.println("指令无效，请先登陆或注册");
		}

		// 发送指令
		while (true) {
			info = strin.readLine();
			String[] order = new String[] {};
			order = info.split(" ");
			int ordernum = getOrdernum(order[0]);

			int orderFlag = 0;

			if (ordernum==2 && order.length == 1) {
				System.out.println("正在获取竞拍室信息，请稍等");
				data2 = "2 ".getBytes();
				packet2 = new DatagramPacket(data2, data2.length, address, port);
				socket.send(packet2);
			}

			else if (ordernum==3 && order.length == 2) {
				if (masterID == -1 && isNumeric(order[1])) {
					System.out.println("正在加入竞拍室，请稍等");
					info = "3 " + order[1] + " " + bidderID;
					data2 = info.getBytes();
					packet2 = new DatagramPacket(data2, data2.length, address, port);
					socket.send(packet2);
				} else
					orderFlag = 1;
			}

			else if (ordernum==4 && order.length == 1) {
				if (auctionNo != -1) {
					System.out.println("正在获取竞拍者名单，请稍等");
					info = "4 " + auctionNo;
					data2 = info.getBytes();
					packet2 = new DatagramPacket(data2, data2.length, address, port);
					socket.send(packet2);
				} else
					System.out.println("抱歉，你尚未进入竞拍室");
			}

			else if (ordernum==5 && order.length == 2) {
				if (auctionNo != -1) {
					if (masterID == -1 && isNumeric(order[1])) {
						System.out.println("正在竞价，请稍等");
						info = "5 " + order[1] + " " + auctionNo + " " + bidderID;
						data2 = info.getBytes();
						packet2 = new DatagramPacket(data2, data2.length, address, port);
						socket.send(packet2);
					} else
						orderFlag = 1;
				} else
					System.out.println("抱歉，你尚未进入竞拍室");
			}

			else if (ordernum==6 && order.length == 1) {
				if (auctionNo != -1) {
					if (masterID == -1) {
						System.out.println("正在尝试离开，请稍等");
						info = "6 " + auctionNo + " " + bidderID;
						data2 = info.getBytes();
						packet2 = new DatagramPacket(data2, data2.length, address, port);
						socket.send(packet2);
					} else {
						System.out.println("正在离开，请稍等");
						info = "6  7" + auctionNo;
						data2 = info.getBytes();
						packet2 = new DatagramPacket(data2, data2.length, address, port);
						socket.send(packet2);
					}
				} else
					System.out.println("抱歉，你尚未进入竞拍室");
			}

			else if (ordernum==8) {
				if (masterID != -1) {
					if (order.length == 2) {
						System.out.println("正在群发信息，请稍等");
						info = "8 " + order[1];
						data2 = info.getBytes();
						packet2 = new DatagramPacket(data2, data2.length, address, port);
						socket.send(packet2);
					} else if (order.length == 3 && isNumeric(order[1])) {
						System.out.println("正在发送信息，请稍等");
						info = "8 " + order[1] + " " + order[2];
						data2 = info.getBytes();
						packet2 = new DatagramPacket(data2, data2.length, address, port);
						socket.send(packet2);
					}
				} else
					orderFlag = 1;
			}

			else if (ordernum==9 && order.length == 2) {
				if (masterID != -1 && isNumeric(order[1])) {
					System.out.println("正在进入竞拍室，请稍等");
					info = "9 " + order[1];
					data2 = info.getBytes();
					packet2 = new DatagramPacket(data2, data2.length, address, port);
					socket.send(packet2);
				} else
					orderFlag = 1;
			}

			else if (ordernum==10) {
				if (auctionNo != -1) {
					if (order.length == 2 && masterID != -1 && isNumeric(order[1])) {
						System.out.println("正在踢出用户，请稍等");
						info = "10 " + order[1] + " " + auctionNo;
						data2 = info.getBytes();
						packet2 = new DatagramPacket(data2, data2.length, address, port);
						socket.send(packet2);
					} else
						orderFlag = 1;
				} else
					System.out.println("抱歉，你尚未进入竞拍室");
			}

			else if (ordernum==11 && order.length == 3) {
				if (masterID != -1 && isNumeric(order[2])) {
					System.out.println("正在创建新的竞拍室，请稍等");
					info = "11 " + order[1] + " " + order[2];
					data2 = info.getBytes();
					packet2 = new DatagramPacket(data2, data2.length, address, port);
					socket.send(packet2);
				} else
					orderFlag = 1;
			}

			else if (ordernum==12 && order.length == 2) {
				if (masterID != -1 && isNumeric(order[1])) {
					System.out.println("正在关闭竞拍室，请稍等");
					info = "12 " + order[1];
					data2 = info.getBytes();
					packet2 = new DatagramPacket(data2, data2.length, address, port);
					socket.send(packet2);
				} else
					orderFlag = 1;
			}

			else if (ordernum==13 && order.length == 1) {

				if (bidderID != -1 && auctionNo != -1) {
					info = "13 " + auctionNo + " " + bidderID;
					data2 = info.getBytes();
					packet2 = new DatagramPacket(data2, data2.length, address, port);
					socket.send(packet2);
				} else {
					info = "13, ";
					data2 = info.getBytes();
					packet2 = new DatagramPacket(data2, data2.length, myaddress, myport);
				}
				try {
					Thread.sleep(100);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				if (!reciverFlag)
					break;
			}
			
			else
				orderFlag = 1;

			if (orderFlag == 1) {
				System.out.println("指令有误或权限不足，请重新输入");
			}
		}

		mainFlag = false;

		// 关闭客户端
		socket.close();
		System.out.println("*****客户端关闭*********");
	}
	
	public void startReciver() throws IOException {
		Reciver channel = new Reciver();
		fool.add(channel);
		new Thread(channel).start();
	}

	private class Reciver implements Runnable {
		private byte[] data2;
		private DatagramPacket packet2;
		private String reply;

		public Reciver() throws IOException {
			data2 = new byte[1024];
			packet2 = new DatagramPacket(data2, data2.length);
		}

		public void run() {
			while (mainFlag) {
				try {
					socket.receive(packet2);
				} catch (IOException e) {
					e.printStackTrace();
				}
				reply = new String(data2, 0, packet2.getLength());
				String[] info = new String[] {};
				info = reply.split(", ");
				int infornum = Integer.parseInt(info[0]);
				
				if(infornum == 1){
					int id = Integer.parseInt(info[2]);
					bidderID = id;
					System.out.println(info[1]);
				}
				
				else if(infornum == 7)
				{
					int id = Integer.parseInt(info[2]);
					masterID = id;
					System.out.println(info[1]);
				}
				
				else if(infornum == 2){
					if(info.length % 3 == 1){
					System.out.println("竞拍室列表");
					System.out.println("*********************");
					System.out.println("序号         名字          价格");
					for(int i=1; i<info.length; i+=3)
						System.out.println(info[i] + "     " +  info[i + 1] + "     " + info[i + 2]);
					System.out.println("*********************");
				}else
					System.out.println("获取竞拍室列表成功，但传输过程中出错");
				}
				
				else if(infornum == 3 || infornum == 9)
				{
					int no = Integer.parseInt(info[2]);
					auctionNo = no;
					System.out.println(info[1]);
				}
				
				else if(infornum == 4){
					System.out.println("竞拍者名单");
					System.out.println("*********************");
					for(int i=1; i<info.length; i++)
						System.out.println(info[i]);
					System.out.println("*********************");
				}
				
				else if(infornum == 6){
					auctionNo = -1;
					System.out.println(info[1]);
				}
				
				else if(infornum == 13){
					auctionNo = -1;
					break;
				}
				
				else{
					System.out.println(info[1]);
				}
			}
			reciverFlag = false;
		}
	}
}